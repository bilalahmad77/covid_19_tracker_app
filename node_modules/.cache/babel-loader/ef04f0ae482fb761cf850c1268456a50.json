{"ast":null,"code":"var _jsxFileName = \"H:\\\\covid_19_tracker_app\\\\src\\\\components\\\\Chart\\\\Chart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Chart = ({\n  data: {\n    confirmed,\n    recovered,\n    deaths\n  },\n  country\n}) => {\n  const [dailyData, setDailyData] = useState({});\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      const initialDailyData = await fetchDailyData();\n      setDailyData(initialDailyData);\n    };\n\n    fetchMyAPI();\n  }, []);\n  const lineChart = dailyData.length ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'Deaths',\n        borderColor: '#3333ff',\n        backgroundColor: 'rgba(255,0,0,0.5)',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["H:/covid_19_tracker_app/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","data","confirmed","recovered","deaths","country","dailyData","setDailyData","fetchMyAPI","initialDailyData","lineChart","length","labels","map","date","datasets","label","borderColor","fill","backgroundColor","container"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAAQC,cAAR,QAA6B,WAA7B;AACA,SAAQC,IAAR,EAAaC,GAAb,QAAuB,iBAAvB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AACA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,SAAb;AAAwBC,IAAAA;AAAxB,GAAR;AAA0CC,EAAAA;AAA1C,CAAD,KAAyD;AACrE,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,UAAU,GAAG,YAAY;AAC7B,YAAMC,gBAAgB,GAAG,MAAMb,cAAc,EAA7C;AAEAW,MAAAA,YAAY,CAACE,gBAAD,CAAZ;AACD,KAJD;;AAMAD,IAAAA,UAAU;AACX,GARQ,EAQN,EARM,CAAT;AAUE,QAAME,SAAS,GACXJ,SAAS,CAACK,MAAV,gBAEA,oBAAC,IAAD;AACA,IAAA,IAAI,EAAI;AACJC,MAAAA,MAAM,EAAEN,SAAS,CAACO,GAAV,CAAc,CAAC;AAACC,QAAAA;AAAD,OAAD,KAAUA,IAAxB,CADJ;AAEJC,MAAAA,QAAQ,EAAE,CAAC;AACPd,QAAAA,IAAI,EAACK,SAAS,CAACO,GAAV,CAAc,CAAC;AAACX,UAAAA;AAAD,SAAD,KAAeA,SAA7B,CADE;AAEPc,QAAAA,KAAK,EAAC,UAFC;AAGPC,QAAAA,WAAW,EAAC,SAHL;AAIPC,QAAAA,IAAI,EAAC;AAJE,OAAD,EAKR;AACEjB,QAAAA,IAAI,EAACK,SAAS,CAACO,GAAV,CAAc,CAAC;AAACT,UAAAA;AAAD,SAAD,KAAYA,MAA1B,CADP;AAEEY,QAAAA,KAAK,EAAC,QAFR;AAGEC,QAAAA,WAAW,EAAC,SAHd;AAIEE,QAAAA,eAAe,EAAC,mBAJlB;AAKED,QAAAA,IAAI,EAAC;AALP,OALQ;AAFN,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,GAoBI,IArBR;AAuBA,sBACE;AAAK,IAAA,SAAS,EAAInB,MAAM,CAACqB,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,SADL,CADF;AAMH,CA1CD;;AA2CA,eAAeV,KAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api';\r\nimport {Line,Bar} from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchMyAPI = async () => {\r\n      const initialDailyData = await fetchDailyData();\r\n\r\n      setDailyData(initialDailyData);\r\n    };\r\n\r\n    fetchMyAPI();\r\n  }, []);\r\n\r\n    const lineChart = (\r\n        dailyData.length\r\n        ? (\r\n        <Line \r\n        data = {{\r\n            labels: dailyData.map(({date})=>date),\r\n            datasets :[{\r\n                data:dailyData.map(({confirmed})=>confirmed),\r\n                label:'Infected',\r\n                borderColor:'#3333ff',\r\n                fill:true,\r\n            },{\r\n                data:dailyData.map(({deaths})=>deaths),\r\n                label:'Deaths',\r\n                borderColor:'#3333ff',\r\n                backgroundColor:'rgba(255,0,0,0.5)',\r\n                fill:true,\r\n\r\n            }],\r\n        }}\r\n        \r\n        />):null\r\n    );\r\n    return (\r\n      <div className = {styles.container}>\r\n          {lineChart}\r\n\r\n      </div>\r\n    )\r\n}\r\nexport default Chart;"]},"metadata":{},"sourceType":"module"}